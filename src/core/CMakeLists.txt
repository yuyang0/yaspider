ADD_DEFINITIONS(-D_GNU_SOURCE)
SET(DIR_SRCS conf.c connection.c
  http.c init.c init_ev.c log.c
  main.c parse.c site.c siteht.c save.c server.c
  url.c url_bf.c url_fifo.c)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../lib)
LINK_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR}/../lib)

LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/lib)

ADD_EXECUTABLE(yaspider ${DIR_SRCS})
TARGET_LINK_LIBRARIES(yaspider spider)
# find zlib
FIND_PACKAGE(ZLIB)
IF(ZLIB_FOUND)
  INCLUDE_DIRECTORIES(${ZLIB_INCLUDE_DIR})
  message(STATUS ${ZLIB_LIBRARY})
  TARGET_LINK_LIBRARIES(yaspider ${ZLIB_LIBRARY})
  MESSAGE(STATUS "zlib found")
ELSE(ZLIB_FOUND)
  MESSAGE(FATAL_ERROR "ZLIB library not found")
ENDIF(ZLIB_FOUND)

#find zlog
FIND_PACKAGE(ZLOG REQUIRED)
IF(ZLOG_FOUND)
  INCLUDE_DIRECTORIES(${ZLOG_INCLUDE_DIR})
  TARGET_LINK_LIBRARIES(yaspider ${ZLOG_LIBRARY})
  MESSAGE(STATUS "zlog found")
ENDIF(ZLOG_FOUND)

#find libevent
FIND_PACKAGE(LibEvent  REQUIRED)
INCLUDE_DIRECTORIES(${LIBEVENT_INCLUDE_DIR})
TARGET_LINK_LIBRARIES(yaspider ${LIBEVENT_LIB})

# find berkeley db
FIND_PACKAGE(BerkeleyDB)
if(BerkeleyDB_FOUND)
  INCLUDE_DIRECTORIES(${BerkeleyDB_INCLUDE_DIR})
  TARGET_LINK_LIBRARIES(yaspider ${BerkeleyDB_LIBRARIES})
endif(BerkeleyDB_FOUND)

TARGET_LINK_LIBRARIES(yaspider m pthread)